function init(self)
    self.game_over = false
    
    -- Camera setup for side-scrolling
    self.camera_offset = vmath.vector3(0, 0, 0)
    self.world_width = 1920  -- Background width
    self.screen_width = 960  -- Screen width
    self.screen_height = 640
    
    -- Spawn zombie at random position away from player
    spawn_zombie()
end

function update(self, dt)
    if not self.game_over then
        update_camera(self)
    end
end

function update_camera(self)
    -- Get player position
    local player_pos = go.get_position("player")
    
    -- Calculate desired camera position (follow player)
    local camera_x = player_pos.x - self.screen_width / 2
    
    -- Clamp camera to world bounds
    camera_x = math.max(0, camera_x)  -- Don't scroll past left edge
    camera_x = math.min(self.world_width - self.screen_width, camera_x)  -- Don't scroll past right edge
    
    -- Set camera offset
    self.camera_offset.x = camera_x
    
    -- Update camera position (move all objects relative to camera)
    msg.post("@render:", "set_view_projection", {
        view = vmath.matrix4_look_at(
            vmath.vector3(camera_x + self.screen_width/2, self.screen_height/2, 1),  -- eye
            vmath.vector3(camera_x + self.screen_width/2, self.screen_height/2, 0),  -- look_at
            vmath.vector3(0, 1, 0)  -- up
        )
    })
end

function spawn_zombie()
    local world_width = 1920  -- World width constant
    local screen_height = 640  -- Screen height constant
    local player_pos = go.get_position("player")
    local min_distance = 200
    
    local zombie_pos
    repeat
        zombie_pos = vmath.vector3(
            math.random(100, world_width - 100),  -- Use world width instead of screen
            math.random(100, screen_height - 100),
            0
        )
        local dx = zombie_pos.x - player_pos.x
        local dy = zombie_pos.y - player_pos.y
        local distance = math.sqrt(dx * dx + dy * dy)
    until distance > min_distance
    
    go.set_position(zombie_pos, "zombie")
end

function on_message(self, message_id, message, sender)
    if message_id == hash("game_over") then
        if not self.game_over then
            self.game_over = true
            
            -- Stop zombie movement
            msg.post("zombie", "disable")
            
            -- Disable player input
            msg.post("player", "disable_input")
            
            -- Show game over overlay
            msg.post("game_over", "show")
            
            -- Take input focus for restart
            msg.post(".", "acquire_input_focus")
        end
    end
end

function on_input(self, action_id, action)
    if self.game_over and action_id == hash("restart") and action.pressed then
        -- Restart game
        self.game_over = false
        
        -- Enable zombie movement
        msg.post("zombie", "enable")
        
        -- Hide game over overlay
        msg.post("game_over", "hide")
        
        -- Enable player input
        msg.post("player", "enable_input")
        
        -- Release input focus
        msg.post(".", "release_input_focus")
        
        -- Reset player position
        go.set_position(vmath.vector3(480, 320, 0), "player")
        
        -- Respawn zombie
        spawn_zombie()
    end
end